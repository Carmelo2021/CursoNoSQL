<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Catálogo de Productos - MongoDB Filters Demo</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link href="/css/common.css" rel="stylesheet">
  <link href="/css/catalogo.css" rel="stylesheet">
</head>
<body>
  <!-- Navegación -->
  <nav class="navbar navbar-expand-lg navbar-dark navbar-custom">
    <div class="container">
      <a class="navbar-brand" href="/">
        <i class="fas fa-database me-2"></i>MongoDB Learning App
      </a>
      <div class="navbar-nav ms-auto">
        <a class="nav-link" href="/">
          <i class="fas fa-home me-1"></i>Inicio
        </a>
        <a class="nav-link" href="/mapa">
          <i class="fas fa-map-marked-alt me-1"></i>Mapa
        </a>
        <a class="nav-link active" href="/catalogo">
          <i class="fas fa-shopping-cart me-1"></i>Catálogo
        </a>
      </div>
    </div>
  </nav>

  <div class="container-fluid py-4">
    <div class="row">
      <!-- Panel de Filtros -->
      <div class="col-lg-3">
        <div class="filter-panel">
          <h4 class="mb-3">
            <i class="fas fa-filter text-primary"></i> Filtros de Búsqueda
          </h4>
          
          <form id="filterForm">
            <!-- Filtro por Nombre -->
            <div class="mb-3">
              <label class="form-label fw-bold">
                <i class="fas fa-search"></i> Buscar por Nombre
              </label>
              <input type="text" class="form-control" id="nombreFilter" placeholder="Ej: Arroz, Leche, Pan...">
              <small class="text-muted">Operador: $regex (búsqueda por texto)</small>
            </div>

            <!-- Filtro por Categoría -->
            <div class="mb-3">
              <label class="form-label fw-bold">
                <i class="fas fa-tags"></i> Categoría
              </label>
              <select class="form-select" id="categoriaFilter">
                <option value="">Todas las categorías</option>
                <option value="Granos">Granos</option>
                <option value="Aceites">Aceites</option>
                <option value="Lácteos">Lácteos</option>
                <option value="Huevos">Huevos</option>
                <option value="Panadería">Panadería</option>
                <option value="Cafés">Cafés</option>
                <option value="Endulzantes">Endulzantes</option>
                <option value="Dulces">Dulces</option>
                <option value="Enlatados">Enlatados</option>
                <option value="Condimentos">Condimentos</option>
                <option value="Pasta">Pasta</option>
                <option value="Salsas">Salsas</option>
                <option value="Harinas">Harinas</option>
                <option value="Bebidas">Bebidas</option>
                <option value="Aseo">Aseo</option>
                <option value="Frutas">Frutas</option>
                <option value="Verduras">Verduras</option>
              </select>
              <small class="text-muted">Operador: $eq (igualdad exacta)</small>
            </div>

            <!-- Filtro por Rango de Precio -->
            <div class="mb-3">
              <label class="form-label fw-bold">
                <i class="fas fa-dollar-sign"></i> Rango de Precio
              </label>
              <div class="row">
                <div class="col-6">
                  <input type="number" class="form-control" id="precioMin" placeholder="Mín" min="0" step="100">
                </div>
                <div class="col-6">
                  <input type="number" class="form-control" id="precioMax" placeholder="Máx" min="0" step="100">
                </div>
              </div>
              <small class="text-muted">Operadores: $gte (mayor o igual), $lte (menor o igual)</small>
            </div>

            <!-- Filtro por Stock -->
            <div class="mb-3">
              <label class="form-label fw-bold">
                <i class="fas fa-boxes"></i> Disponibilidad
              </label>
              <select class="form-select" id="stockFilter">
                <option value="">Cualquier stock</option>
                <option value="low">Stock bajo (< 50)</option>
                <option value="medium">Stock medio (50-100)</option>
                <option value="high">Stock alto (> 100)</option>
                <option value="outofstock">Sin stock (= 0)</option>
              </select>
              <small class="text-muted">Operadores: $lt, $gte, $lte, $eq</small>
            </div>

            <!-- Filtros Avanzados -->
            <div class="mb-3">
              <label class="form-label fw-bold">
                <i class="fas fa-cogs"></i> Filtros Avanzados
              </label>
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="ordenarPrecio">
                <label class="form-check-label" for="ordenarPrecio">
                  Ordenar por precio (menor a mayor)
                </label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="limitarResultados">
                <label class="form-check-label" for="limitarResultados">
                  Limitar a 10 resultados
                </label>
              </div>
              <small class="text-muted">Operadores: $sort, $limit</small>
            </div>

            <!-- Botón Aplicar Filtros -->
            <button type="button" class="btn btn-primary w-100 mb-2" onclick="aplicarFiltros()">
              <i class="fas fa-search"></i> Aplicar Filtros
            </button>
            
            <button type="button" class="btn btn-outline-secondary w-100" onclick="limpiarFiltros()">
              <i class="fas fa-eraser"></i> Limpiar Filtros
            </button>
          </form>

          <!-- Mostrar Query MongoDB -->
          <div class="mt-4">
            <h6 class="text-primary">
              <i class="fas fa-code"></i> Query MongoDB Generada:
            </h6>
            <div id="queryDisplay" class="query-display">
              <strong>db.productos.find({})</strong>
            </div>
            <div id="controllerInfo" class="alert alert-info mt-2" style="font-size: 0.8rem;">
              <i class="fas fa-info-circle"></i> 
              <strong>Función del Controlador:</strong> <span id="controllerFunction">getAllProducts()</span>
            </div>
            <div class="filter-explanation">
              <small>
                <strong>Propósito Educativo:</strong> Esta consulta muestra cómo MongoDB utiliza operadores para filtrar documentos en una colección.
              </small>
            </div>
          </div>
        </div>
      </div>

      <!-- Área de Productos -->
      <div class="col-lg-9">
        <div class="d-flex justify-content-between align-items-center mb-4">
          <h2>
            <i class="fas fa-shopping-cart text-primary"></i> Catálogo de Productos
          </h2>
          <div class="results-badge" id="resultCount">
            <i class="fas fa-box"></i>
            <span id="totalProductos">0</span> productos encontrados
          </div>
        </div>

        <!-- Loading indicator -->
        <div id="loadingIndicator" class="loading-products" style="display: none;">
          <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
          </div>
          <p class="mt-2">Aplicando filtros...</p>
        </div>

        <!-- Grid de Productos con Flexbox -->
        <div class="productos-container" id="productosGrid">
          <!-- Los productos se cargarán aquí via JavaScript -->
        </div>

        <!-- Mensaje si no hay resultados -->
        <div id="noResults" class="no-products" style="display: none;">
          <i class="fas fa-search"></i>
          <h4>No se encontraron productos</h4>
          <p>Intenta ajustar los filtros de búsqueda</p>
          <div class="mt-3">
            <button class="btn btn-custom" onclick="cargarProductosIniciales()">
              <i class="fas fa-refresh me-2"></i>Ver Todos los Productos
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    /**
     * FUNCIONES EDUCATIVAS DEL CATÁLOGO
     * 
     * cargarProductosIniciales() -> Usa getAllProducts() del controlador
     *   - Ejecuta: GET /api/productos 
     *   - Query: db.productos.find({})
     *   - Propósito: Obtener todos los productos sin filtros
     * 
     * aplicarFiltros() -> Usa filtrarProductos() del controlador  
     *   - Ejecuta: POST /api/productos/filtrar
     *   - Query: db.productos.find({filtros}).sort().limit()
     *   - Propósito: Aplicar filtros complejos con operadores MongoDB
     */
    // Cargar productos inicialmente
    document.addEventListener('DOMContentLoaded', function() {
      cargarProductosIniciales();
    });

    function cargarProductosIniciales() {
      console.log('📚 CARGANDO CATÁLOGO INICIAL - Usando getAllProducts');
      
      // Mostrar indicador de carga
      document.getElementById('loadingIndicator').style.display = 'block';
      document.getElementById('noResults').style.display = 'none';
      
      // Actualizar display de query inicial
      document.getElementById('queryDisplay').innerHTML = '<strong>db.productos.find({})</strong>';
      document.getElementById('controllerFunction').textContent = 'getAllProducts()';
      document.getElementById('controllerInfo').className = 'alert alert-success mt-2';
      
      // Cargar todos los productos usando getAllProducts
      fetch('/api/productos', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          mostrarProductos(data.productos);
          document.getElementById('totalProductos').textContent = data.count;
          console.log(`✅ Catálogo cargado: ${data.count} productos`);
          console.log('📋 Query Explanation:', data.queryExplanation);
        } else {
          throw new Error(data.error || 'Error al cargar productos');
        }
      })
      .catch(error => {
        console.error('❌ Error al cargar catálogo inicial:', error);
        document.getElementById('noResults').style.display = 'block';
        document.getElementById('noResults').innerHTML = `
          <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
          <h4 class="text-muted">Error al cargar el catálogo</h4>
          <p class="text-muted">Asegúrate de que los datos estén cargados con: <code>npm run cargar-inventario</code></p>
        `;
      })
      .finally(() => {
        document.getElementById('loadingIndicator').style.display = 'none';
      });
    }

    function aplicarFiltros() {
      // Mostrar indicador de carga
      document.getElementById('loadingIndicator').style.display = 'block';
      document.getElementById('noResults').style.display = 'none';

      // Construir objeto de filtros
      const filtros = construirFiltros();
      
      // Si no hay filtros aplicados, usar getAllProducts en lugar de filtrar
      const tienesFiltros = Object.keys(filtros.query).length > 0 || 
                           Object.keys(filtros.options).length > 0;
      
      console.log('🔍 Verificando filtros:', {
        query: filtros.query,
        options: filtros.options,
        tienesFiltros: tienesFiltros
      });
      
      if (!tienesFiltros) {
        console.log('📚 SIN FILTROS - Usando getAllProducts');
        cargarProductosIniciales();
        return;
      }
      
      console.log('📚 APLICANDO FILTROS - Usando filtrarProductos');
      
      // Actualizar display de query
      actualizarQueryDisplay(filtros);
      document.getElementById('controllerFunction').textContent = 'filtrarProductos()';
      document.getElementById('controllerInfo').className = 'alert alert-warning mt-2';

      // Realizar consulta AJAX con filtros
      fetch('/api/productos/filtrar', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(filtros)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          mostrarProductos(data.productos);
          document.getElementById('totalProductos').textContent = data.count;
          console.log(`✅ Filtros aplicados: ${data.count} productos encontrados`);
          console.log('📋 Explicación educativa:', data.explicacionEducativa);
        } else {
          throw new Error(data.error || 'Error al aplicar filtros');
        }
      })
      .catch(error => {
        console.error('❌ Error al aplicar filtros:', error);
        alert('Error al aplicar filtros: ' + error.message);
      })
      .finally(() => {
        document.getElementById('loadingIndicator').style.display = 'none';
      });
    }

    function construirFiltros() {
      const filtros = {
        query: {},
        options: {}
      };

      // Filtro por nombre (regex)
      const nombre = document.getElementById('nombreFilter').value.trim();
      if (nombre) {
        filtros.query.producto = { $regex: nombre, $options: 'i' };
      }

      // Filtro por categoría
      const categoria = document.getElementById('categoriaFilter').value;
      if (categoria) {
        filtros.query.categoria = categoria;
      }

      // Filtro por rango de precio
      const precioMin = document.getElementById('precioMin').value;
      const precioMax = document.getElementById('precioMax').value;
      if (precioMin || precioMax) {
        filtros.query.precio_unitario = {};
        if (precioMin) filtros.query.precio_unitario.$gte = parseInt(precioMin);
        if (precioMax) filtros.query.precio_unitario.$lte = parseInt(precioMax);
      }

      // Filtro por stock
      const stock = document.getElementById('stockFilter').value;
      if (stock) {
        switch (stock) {
          case 'low':
            filtros.query.stock_actual = { $lt: 50 };
            break;
          case 'medium':
            filtros.query.stock_actual = { $gte: 50, $lte: 100 };
            break;
          case 'high':
            filtros.query.stock_actual = { $gt: 100 };
            break;
          case 'outofstock':
            filtros.query.stock_actual = { $eq: 0 };
            break;
        }
      }

      // Opciones de ordenamiento y límite
      if (document.getElementById('ordenarPrecio').checked) {
        filtros.options.sort = { precio_unitario: 1 };
      }

      if (document.getElementById('limitarResultados').checked) {
        filtros.options.limit = 10;
      }

      return filtros;
    }

    function actualizarQueryDisplay(filtros) {
      let queryText = 'db.productos.find(';
      queryText += JSON.stringify(filtros.query, null, 2);
      queryText += ')';
      
      if (filtros.options.sort) {
        queryText += '.sort(' + JSON.stringify(filtros.options.sort) + ')';
      }
      
      if (filtros.options.limit) {
        queryText += '.limit(' + filtros.options.limit + ')';
      }

      document.getElementById('queryDisplay').innerHTML = '<strong>' + queryText + '</strong>';
    }

    function mostrarProductos(productos) {
      const grid = document.getElementById('productosGrid');
      
      if (productos.length === 0) {
        grid.style.display = 'none';
        document.getElementById('noResults').style.display = 'block';
        return;
      }

      // Restaurar el display original del grid (definido en CSS)
      grid.style.display = '';
      grid.innerHTML = productos.map(producto => `
        <div class="product-card">
          <div class="product-header">
            <span class="product-category">${producto.categoria}</span>
            <div class="product-stock ${getStockClass(producto.stock_actual)}">
              <i class="fas fa-boxes"></i> ${producto.stock_actual}
            </div>
          </div>
          
          <div class="product-name">${producto.producto}</div>
          
          <div class="product-footer">
            <div class="product-price">
              $${producto.precio_unitario.toLocaleString('es-CO')}
            </div>
            <div class="product-stock-info">
              <span class="text-muted">Stock:</span>
              <span class="stock-status ${getStockStatusClass(producto.stock_actual)}">
                ${getStockText(producto.stock_actual)}
              </span>
            </div>
          </div>
        </div>
      `).join('');
    }

    function getStockClass(stock) {
      if (stock < 50) return 'stock-low';
      if (stock <= 100) return 'stock-medium';
      return 'stock-high';
    }

    function getStockStatusClass(stock) {
      if (stock === 0) return 'agotado';
      if (stock < 50) return 'bajo';
      if (stock <= 100) return 'medio';
      return 'alto';
    }

    function getStockText(stock) {
      if (stock === 0) return 'Agotado';
      if (stock < 50) return 'Bajo';
      if (stock <= 100) return 'Medio';
      return 'Alto';
    }

    function limpiarFiltros() {
      console.log('🧹 LIMPIANDO FILTROS - Regresando al catálogo inicial');
      document.getElementById('filterForm').reset();
      cargarProductosIniciales();
    }

    // Aplicar filtros al presionar Enter en campos de texto
    document.getElementById('nombreFilter').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        aplicarFiltros();
      }
    });

    document.getElementById('precioMin').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        aplicarFiltros();
      }
    });

    document.getElementById('precioMax').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        aplicarFiltros();
      }
    });
  </script>
</body>
</html>